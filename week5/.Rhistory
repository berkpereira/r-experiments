source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
contacts
1e-7
1e-7+1
1e-2+1
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
initial.infected
typeof(initial.infected)
typeof(c(20.0))
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
?stratify_by_risk
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
?stratify_by_age
demography
stratify_by_age(demography, c())
stratify_by_age(demography, c(0))
stratify_by_age(demography, c(100))
typeof(stratify_by_age(demography, c(100)))
sum(demography)
c(sum(demography))
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
initial.infected
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
initial.infected
typeof(initial.infected)
population
typeof(population)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
?infectionODEs
population
population <- c(sum(demography))
population
initialinitial.infected <- c(10 ^ 1.5)
initial.infected <- c(10 ^ 1.5)
initial.infected
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
View(run_model_vignette)
typeof(population)
typeof(initial.infected)
typeof(vaccine_calendar)
typeof(contacts)
typeof(susceptibility)
typeof(t)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
for(t in transmissibility_values) {typeof(t)}
for(t in transmissibility_values) {print(typeof(t))}
typeof(infection_delays)
typeof(infection_delayinterval)
typeof(interval)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
typeof(transmissibility)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
View(model_data)
View(model_data)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
model_data
View(model_data)
View(model_data)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
View(model_data)
View(model_data)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
View(model_data)
typeof(odes)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
typeof(odes)
View(odes)
View(odes)
population
View(odes)
odes$V1
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
View(polymod_uk)
View(polymod_uk)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/simple-models.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
inference_results$batch
inference_results
str(inference_results)
inference_results$batch
str(inference_results$batch)
install.packages("tidyverse")
F
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
batch_tibble
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
View(viro)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
?vaccination_scenario
getwd()
getwd()
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
contacts
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
population
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
polymod
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?epiparameter
??epiparameter
?infectionODEs
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
load("inference-data-results.RData")
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
?as_vaccination_calendar
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
?infectionODEs
ili
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
plot_param_hists(inference_results$batch)
?inference
plot_param_hists(inference_results$batch)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
plot_param_hists(inference_results$batch)
plot_param_hists <- function(inference_results_batch, all_params = FALSE) {
# Convert the batch results to a tibble for better handling with tidyverse functions
batch_tibble <- as_tibble(inference_results_batch$batch)
# Check if all parameters should be included
if (!all_params) {
# If not all parameters, select only the specified parameters by their indices
batch_tibble <- batch_tibble %>%
select(4, 6, 7, 8, 9)
}
# Pivot the data to a long format
batch_long <- batch_tibble %>%
pivot_longer(cols = everything(), names_to = "Parameter", values_to = "Value")
# Plot histograms for each parameter with adjusted layout if not all parameters are included
number_of_columns <- if (all_params) 3 else 3  # Adjust the number of columns based on the number of plots
ggplot(batch_long, aes(x = Value)) +
geom_histogram(bins = 25, fill = "blue", color = "black") +
facet_wrap(~ Parameter, ncol = number_of_columns, scales = "free") +
theme_minimal() +
labs(x = "Parameter Value", y = "Frequency", title = "Histograms of Inference Parameters")
}
plot_param_hists(inference_results$batch)
plot_param_hists(inference_results$batch)
plot_param_hists(inference_results)
plot_param_hists(inference_results, all_params = T)
plot_param_hists <- function(inference_results_batch, all_params = FALSE) {
# Convert the batch results to a tibble for better handling with tidyverse functions
batch_tibble <- as_tibble(inference_results_batch$batch)
# Check if all parameters should be included
if (!all_params) {
# If not all parameters, select only the specified parameters by their indices
batch_tibble <- batch_tibble %>%
select(2, 6, 7, 8, 9)
}
# Pivot the data to a long format
batch_long <- batch_tibble %>%
pivot_longer(cols = everything(), names_to = "Parameter", values_to = "Value")
# Plot histograms for each parameter with adjusted layout if not all parameters are included
number_of_columns <- if (all_params) 3 else 3  # Adjust the number of columns based on the number of plots
ggplot(batch_long, aes(x = Value)) +
geom_histogram(bins = 25, fill = "blue", color = "black") +
facet_wrap(~ Parameter, ncol = number_of_columns, scales = "free") +
theme_minimal() +
labs(x = "Parameter Value", y = "Frequency", title = "Histograms of Inference Parameters")
}
plot_param_hists(inference_results)
batch_tibble <- as_tibble(inference_results$batch)
batch_tibble %>% select(2, 6, 7, 8, 9)
batch_tibble
plot_param_hists <- function(inference_results_batch, all_params = FALSE) {
# Convert the batch results to a tibble for better handling with tidyverse functions
batch_tibble <- as_tibble(inference_results_batch$batch)
# Check if all parameters should be included
if (!all_params) {
# If not all parameters, select only the specified parameters by their indices
batch_tibble <- batch_tibble %>%
select(5, 6, 7, 8, 9)
}
# Pivot the data to a long format
batch_long <- batch_tibble %>%
pivot_longer(cols = everything(), names_to = "Parameter", values_to = "Value")
# Plot histograms for each parameter with adjusted layout if not all parameters are included
number_of_columns <- if (all_params) 3 else 3  # Adjust the number of columns based on the number of plots
ggplot(batch_long, aes(x = Value)) +
geom_histogram(bins = 25, fill = "blue", color = "black") +
facet_wrap(~ Parameter, ncol = number_of_columns, scales = "free") +
theme_minimal() +
labs(x = "Parameter Value", y = "Frequency", title = "Histograms of Inference Parameters")
}
plot_param_hists(inference_results)
data(demography)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?modify_coverage_data
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
new_dates_vector
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_param_hists(inference_results)
demography
population
sum(population)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
batch_tibble <- as_tibble(inference_results$batch)
batch_tibble
batch_tibble
plot_param_hists(inference_results)
plot_param_hists <- function(inference_results, all_params = FALSE) {
# Convert the batch results to a tibble for better handling with tidyverse functions
batch_tibble <- as_tibble(inference_results$batch)
# Check if all parameters should be included
if (!all_params) {
# If not all parameters, select only the specified parameters by their indices
batch_tibble <- batch_tibble %>%
select(5, 6, 7, 8)
}
# Pivot the data to a long format
batch_long <- batch_tibble %>%
pivot_longer(cols = everything(), names_to = "Parameter", values_to = "Value")
# Plot histograms for each parameter with adjusted layout if not all parameters are included
number_of_columns <- if (all_params) 3 else 2  # Adjust the number of columns based on the number of plots
ggplot(batch_long, aes(x = Value)) +
geom_histogram(bins = 25, fill = "blue", color = "black") +
facet_wrap(~ Parameter, ncol = number_of_columns, scales = "free") +
theme_minimal() +
labs(x = "Parameter Value", y = "Frequency", title = "Histograms of Inference Parameters")
}
plot_param_hists(inference_results)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
plot_param_hists(inference_results = inference_results)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
install.packages("beepr")
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
source("~/repos/r-experiments/week5/proper-inference.R", echo=TRUE)
save(plot_coverage_time_series, plot_param_hists, strain, population, polymod,
baseline_dates_vector, baseline_coverage_matrix,
risk_ratios, contacts, inference_results,
baseline_vaccine_efficacy, file = "inference-data-results.RData")
View(risk_ratios)
load("GOOD-INFERENCE.RData")
plot_param_hists(inference_results)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
contacts
population
polymod
?polymid
?polymod
??polymod_uk
?contact_matrix
contacts
population
population[1]
population[1] / 2
population[1] + population[2]
contacts
contacts
population
contacts[1,1]
contacts[1,1] * (population[1] + population[4])
contacts[2,2] * (population[2] + population[5])
contacts
population[1] + population[4]
population[2] + population[5]
population[3] + population[6]
population
population[1] + population[4]
population[2] + population[5]
population[3] + population[6]
?seq
?infectionODEs
load("GOOD-INFERENCE.RData")
?seq
?as_vaccination_calendar
?infectionODEs
contacts
T_latent <- 2 / 2.5
T_infectious <- 2 / 1.1
T_latent
T_infectious
batch_tibble
?as_tibble
plot_param_hists(inference_results)
plot_param_hists(inference_results)
as_tibble
library(fluEvidenceSynthesis)
library(pander)
library(ggplot2)
library(dplyr)
library(tidyr)
library(epiparameter)
library(qs)
library(ggplot2)
library(tidyverse)
library(beepr)
plot_param_hists(inference_results)
batch_tibble
batch_tibble <- as_tibble(inference_results$batch)
str(batch_tibble)
mean_values <- sapply(batch_tibble, mean)
mean_values
mean_values['transmissibility']
mean_values['transmissibility'] / 2
mean_values['transmissibility'][1]
mean_values['transmissibility'][1][1]
mean_values['transmissibility',1]
?infectionODEs
str(mean_values['transmissibility'])
?infectionODEs
mean_inferred_params <- sapply(batch_tibble, mean)
mean_inferred_params['susceptibility_1']
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
initial_infected
?stratify_by_risk
initial_infected
ag <- c(10 ^ 3, 10 ^ 3)
initial_infected <- stratify_by_risk(ag, matrix(c(0.01,0.4),nrow=1)) # c(990, 600, 10, 400)
initial_infected
risk_ratios
risk_ratios[1]
ag <- c(10 ^ 3, 10 ^ 3, 10 ^ 3)
initial_infected <- stratify_by_risk(ag, matrix(risk_ratios,nrow=1))
initial_infected
population
?rep
rep(10 ^ 3, 3)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
plot_coverage_time_series <- function(dates, coverage) {
# Convert the coverage matrix to a long format data frame suitable for ggplot2
coverage_df <- as.data.frame(coverage)
names(coverage_df) <- c("Low Risk [0,15)",
"Low Risk [15,65)",
"Low Risk [65,+)",
"High Risk [0,15)",
"High Risk [15,65)",
"High Risk [65,+)")
coverage_df$Date <- dates
long_coverage_df <- reshape2::melt(coverage_df, id.vars = "Date", variable.name = "Series", value.name = "Coverage")
# Plotting
p <- ggplot(data = long_coverage_df, aes(x = Date, y = Coverage, color = Series)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Coverage Over Time", x = "Date", y = "Coverage (%)", color = "Series") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) # Display y-axis labels as percentages
# Customize the date breaks and labels on the x-axis
p <- p + scale_x_date(date_breaks = "1 month", date_labels = "%b %d")
# Adjust the date_breaks and date_labels arguments according to your needs
# "%b %d" will format dates as 'Month day', e.g., 'Jan 01'
print(p)
}
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
str(odes)
population
odes
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
plot_odes(odes)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_odes(odes)
normalised_odes
plot_odes(normalised_odes)
plot_odes(normalised_odes, normalised=T)
plot_odes <- function(odes, normalised=FALSE) {
# Melt the data frames for ggplot
odes_long <- melt(odes, id.vars = "Time", variable.name = "Group", value.name = "Cases")
# Plot raw numbers
if (!normalised) {
ggplot(odes_long, aes(x = Time, y = Cases, color = Group)) +
geom_line() +
labs(title = "Weekly New Infection Cases by Group", x = "Week", y = "Number of Cases") +
theme_minimal()
} else {
ggplot(odes_long, aes(x = Time, y = Cases, color = Group)) +
geom_line() +
labs(title = "Weekly New Infection Cases by Group, Normalised", x = "Week", y = "Newly Infected Fraction of Group") +
theme_minimal()
}
}
plot_odes(normalised_odes, normalised=T)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_odes(normalised_odes, normalised=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
population
8973450 * 1e-3
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
population
1000 / (population[2] + population [5])
3 * c(1, 1)
3e-5 * (population[2] + population [5])
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
demography
polymod
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?vaccination_scenario
data("demography")
demography
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
inference_results$contact.ids
new_calendar
polymod
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
odes$Time
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
new_calendar
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_param_hists(inference_results)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_param_hists(inference_results)
my_hist <- plot_param_hists(inference_results)
ggsave("inference.pdf", plot = my_hist, width = 4, height = 6)
ggsave("inference.pdf", plot = my_hist, width = 4, height = 4.5)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
