source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_odes(normalised_odes, normalised=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
population
8973450 * 1e-3
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
population
1000 / (population[2] + population [5])
3 * c(1, 1)
3e-5 * (population[2] + population [5])
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
demography
polymod
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?vaccination_scenario
data("demography")
demography
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
inference_results$contact.ids
new_calendar
polymod
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
odes$Time
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
new_calendar
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_param_hists(inference_results)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
plot_param_hists(inference_results)
my_hist <- plot_param_hists(inference_results)
ggsave("inference.pdf", plot = my_hist, width = 4, height = 6)
ggsave("inference.pdf", plot = my_hist, width = 4, height = 4.5)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes_long <- melt(odes, id.vars = "Time", variable.name = "Group", value.name = "Cases")
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?as_transmission_rate
?as_vaccination_calendar
# setwd("repos/r-experiments/week5")
getwd()  # Displays the current working directory
library(fluEvidenceSynthesis)
library(pander)
library(ggplot2)
library(dplyr)
library(tidyr)
library(epiparameter)
library(qs)
library(ggplot2)
library(tidyverse)
library(beepr)
data("demography")
data("polymod_uk")
################################################################################
# SET STRAIN FOR INFERENCE
################################################################################
# Either H3N2, B, or H1N1
strain <- "H3N2"
################################################################################
# PREPARE THE DATA
################################################################################
# De-serialise Edwin-sent data
all_data <- qread("2017-18_EN_viro_ili.qs")
if (strain == "H3N2") {
infer_data <- all_data$H3N2
} else if (strain == "B") {
infer_data <- all_data$B
} else if (strain == "H1N1") {
infer_data <- all_data$H1N1
} else {
stop("Invalid strain. Choose either H3N2, B, or H1N1.")
}
ili <- infer_data$ili
viro <- infer_data$viro
ili
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
new_coverage_matrix
str(new_coverage_matrix)
?reshape
reshape2::melt
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
additional_title
additional_title
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
library(fluEvidenceSynthesis)
library(pander)
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
library(epiparameter)
library(qs)
library(ggplot2)
library(tidyverse)
library(beepr)
?inference
ili
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
ili
View(ili)
View(ili)
View(ili[["ili"]])
View(viro)
View(viro[["positive"]])
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
coverage
new_coverage_matrix
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
coverage
new_coverage_matrix
odes
str(odes)
odes
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
str(new_coverage_matrix)
str(odes)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
long_coverage_df
long_coverage_df$Series
grepl("Low Risk", long_coverage_df$Series)
?ifelse
ifelse(grepl("Low Risk", long_coverage_df$Series), "Low Risk", "High Risk")
gsub("\\[.*", "", long_coverage_df$Series)
long_coverage_df$AgeGroup <- gsub("\\[.*", "", long_coverage_df$Series)
long_coverage_df$AgeGroup <- gsub("Low Risk |High Risk ", "", long_coverage_df$AgeGroup)
long_coverage_df$AgeGroup
long_coverage_df$AgeGroup <- gsub("\\[.*", "", long_coverage_df$Series)
long_coverage_df$AgeGroup
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
ifelse(grepl("[0,15)", long_coverage_df$Series), "[0,15)", ifelse(grepl("[15,65)", long_coverage_df$Series), "[15,65)", "[65,+)" ))
long_coverage_df$NewGroup <- ifelse(grepl("\\[0,15\\)", long_coverage_df$Series), "[0,15)",
ifelse(grepl("\\[15,65\\)", long_coverage_df$Series), "[15,65)", "[65,+)"))
long_coverage_df$NewGroup <- ifelse(grepl("\\[0,15\\)", long_coverage_df$Series), "[0,15)", ifelse(grepl("\\[15,65\\)", long_coverage_df$Series), "[15,65)", "[65,+)"))
Q
Q
Q
Q
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
str(new_coverage_matrix)
str(odes)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
str(truncation_date)
temp <- modify_coverage_data(baseline_dates_vector,
baseline_coverage_matrix,
coverage_scaling = 1,
start_date_shift = 30,
uptake_speedup = 1)
temp[[1]]
vaccination_scenario()
?vaccination_scenario
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
odes
str(odes)
total_cases(odes)
total_cases <- function(odes) {
# Ensure 'odes' is a data frame and remove the 'Time' column
odes <- as.data.frame(odes)
odes$Time <- NULL
# Sum all values for each group/column
total_cases_sum <- colSums(odes, na.rm = TRUE)
# Create a new data frame with the summed values
total_cases_output <- as.data.frame(t(total_cases_sum))
colnames(total_cases_output) <- names(total_cases_sum)
return(total_cases_output)
}
total_cases(odes)
odes
odes
total_cases(odes)
odes
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
total_cases(odes)
length(baseline_dates_vector)
mean_inferred_params
total_cases(odes)
ode
odes
peak_dates(odes)
peak_dates <- function(odes) {
# Exclude the 'Time' column for calculation
data_without_time <- odes[, -1]
# Initialize an empty vector to store peak dates
peak_dates_vec <- vector("list", length = ncol(data_without_time))
# Iterate over each column to find the index of the max value and map it to its date
for (i in seq_along(data_without_time)) {
max_index <- which.max(data_without_time[[i]])
peak_dates_vec[[i]] <- odes$Time[max_index]
}
# Return the list of peak dates
names(peak_dates_vec) <- colnames(data_without_time)
return(peak_dates_vec)
}
peak_cases <- function(odes) {
# Exclude the 'Time' column for calculation
data_without_time <- odes[, -1]
# Apply max function column-wise and return the result
peak_cases_vec <- apply(data_without_time, 2, max, na.rm = TRUE)
return(peak_cases_vec)
}
peak_dates(odes)
peak_dates
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
delay
calendar_speedup
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
baseline_dates_vector
baseline_coverage_matrix
delay
calendar_speedup
j
speedup_vector
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
calendar_sensitivity_results
str(calendar_sensitivity_results)
odes
colnames(odes)
colnames(odes)[-Time]
population
odes
colnames(odes)
odes
colnames(population)
population
colnames(odes)
str(population)
names(population)
colnames(odes)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
total_ili_numbers
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
thing <- list()
names(thing)
names(thing) <- "this"
thing <- list(1)
thing
names(thing) <- "this"
thing
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
install.packages("foreach")
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
group_names <- names(population)
group_names[1]
length(group_names)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
calendar_sensitivity_results
str(calendar_sensitivity_results)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
matrix_to_plot
calendar_sensitivity_results$total_ili_numbers
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
matrix_to_plot
str(matrix_to_plot)
sensitivity_contours(matrix_to_plot, delay_vector, speedup_vector)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
install.packages(plotly)
rlang::last_trace(drop = FALSE)
install.packages(plotly)
install.packages("plotly")
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
matrix_to_plot
matrix_to_plot
matrix_to_plot[1, 1]
matrix_to_plot[50,1]
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
matrix_to_plot[1, 1]
matrix_to_plot[50,1]
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
str(odes)
baseline_calendar
baseline_coverage_matrix
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
install.packages(c("plotly", "htmlwidgets"))
install.packages("htmlwidgets")
install.packages("webshot")
webshot::install_phantomjs()
webshot::install_phantomjs()
install.packages("chromote")
htmlwidgets::saveWidget(contour_fig, 'plotly_plot.html', selfcontained = TRUE)
library(webshot)
webshot("plotly_plot.html",
"plotly_plot.pdf",
paperwidth = 8,
paperheight = 6,
zoom = 2)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
install.packages('reticulate')
reticulate::install_miniconda()
reticulate::conda_install('r-reticulate', 'python-kaleido')
reticulate::conda_install('r-reticulate', 'plotly', channel = 'plotly')
reticulate::use_miniconda('r-reticulate')
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?kaleido
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
contour_filename <- paste("contour-group", contour_group,
"-quantity-", quantity, ".pdf", sep = "")
save_image(contour_filename, plot = contour_fig, width = PLOT_WIDTH, height = PLOT_HEIGHT)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
contour_filename <- paste("contour-group", contour_group,
"-quantity-", quantity, ".pdf", sep = "")
kaleido(contour_filename, plot = contour_fig, width = PLOT_WIDTH, height = PLOT_HEIGHT)
kaleido(contour_fig, "out.pdf")
contour_fig
contour_filename <- paste("contour-group", contour_group,
"-quantity-", quantity, ".pdf", sep = "")
save_image(contour_fig, file=contour_filename, width = PLOT_WIDTH, height = PLOT_HEIGHT)
contour_filename <- paste("contour-group", contour_group,
"-quantity-", quantity, ".svg", sep = "")
save_image(contour_fig, file=contour_filename, width = PLOT_WIDTH, height = PLOT_HEIGHT)
PLOT_WIDTH
PLOT_HEIGHT
contour_filename <- paste("contour-group", contour_group,
"-quantity-", quantity, ".pdf", sep = "")
save_image(contour_fig, file=contour_filename, width = PLOT_WIDTH, height = PLOT_HEIGHT)
save_image(contour_fig, file=contour_filename, width = 1, height = 10)
save_image(contour_fig, file=contour_filename, width = 4, height = 10)
save_image(contour_fig, file=contour_filename, width = 10, height = 10)
save_image(contour_fig, file=contour_filename, width = 20, height = 10)
save_image(contour_fig, file=contour_filename, width = PLOT_WIDTH, height = PLOT_HEIGHT)
save_image(contour_fig, file=contour_filename, width = PLOT_WIDTH, height = PLOT_HEIGHT + 1)
save_image(contour_fig, file=contour_filename, width = PLOT_WIDTH, height = PLOT_HEIGHT * 3)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
sensitivity_contours_ggplot <- function(matrix, delay_vector, speedup_vector, title = "Contour Plot") {
data_melted <- melt(matrix)
names(data_melted) <- c("X1", "X2", "value")
data_melted$X <- speedup_vector[data_melted$X1]
data_melted$Y <- delay_vector[data_melted$X2]
# Generate the plot using the corrected data frame
p <- ggplot(data_melted, aes(x = X, y = Y, z = value)) +
geom_contour(aes(colour = ..level..)) +
labs(title = "Contour Plot Example", x = "X-axis", y = "Y-axis") +
scale_colour_gradient(low = "blue", high = "red")
print(p)
}
sensitivity_contours_ggplot(matrix_to-plot, delay_vector, speedup_vector)
sensitivity_contours_ggplot(matrix_to_plot, delay_vector, speedup_vector)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
debugSource("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
matrix_to_plot
delay_vector
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
?inference
?adaptive.mcmc
library(fluEvidenceSynthesis)
library(pander)
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
library(epiparameter)
library(qs)
library(ggplot2)
library(tidyverse)
library(beepr)
library(plotly)
?infectionODEs
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
pwd
load("GOOD-INFERENCE.RData")
getwd()
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
load("GOOD-INFERENCE.RData")
new_dates_vector
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
rlang::last_trace()
demography
coverage_matrix
baseline_coverage_matrix
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
2/2.5
2/1.1
install.packages("latex2exp")
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
ods
odes
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
infection_delays
infection_delays[1]
infection_delays[2]
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
source("~/repos/r-experiments/week5/modelling-experiments.R", echo=TRUE)
